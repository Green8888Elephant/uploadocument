import type { NextPage } from "next";
import {useReducer} from "react";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import DropZone from "../components/DropZone";
import ImageTrpc from "../components/ImageTrpc";
import S3Bucket from "../components/S3Bucket"

const Home: NextPage = () => {
  // const { data : dataTrpc, isLoading } = trpc.useQuery([
  //   "example.hell",
  //   { text: 6 },
  // ]);
  // const { data : dataTrpc2 } = trpc.useQuery([
  //   "example.bye"
  // ]);
  // console.log(dataTrpc2)


  const reducer = (state:any, action:any) => {
    switch (action.type) {
      case "SET_IN_DROP_ZONE":
        return { ...state, inDropZone: action.inDropZone };
      case "ADD_FILE_TO_LIST":
        return { ...state, fileList: state.fileList.concat(action.files) };
      default:
        return state;
    }
  };

  // destructuring state and dispatch, initializing fileList to empty array
  const [data, dispatch] = useReducer(reducer, {
    inDropZone: false,
    fileList: [],
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <h1>
          Create <span>T3</span> App
        </h1>

        <div>
          <h3>This stack uses:</h3>
          <ul>
            <li>
              <a href="https://nextjs.org" target="_blank" rel="noreferrer">
                Next.js
              </a>
            </li>
            <li>
              <a href="https://trpc.io" target="_blank" rel="noreferrer">
                tRPC
              </a>
            </li>
            <li>
              <a
                href="https://typescriptlang.org"
                target="_blank"
                rel="noreferrer"
              >
                TypeScript
              </a>
            </li>
          </ul>
          {/*<S3Bucket />*/}

          {/*<div>{dataTrpc ? <p>{dataTrpc.greeting}</p> : <p>Loading..</p>}</div>*/}
          <DropZone data={data} dispatch={dispatch}/>
          <ImageTrpc />
        </div>
      </div>
    </>
  );
};

export default Home;
